name: Deploy Gongspot Server

on:
  push:
    branches: [ core/21 ]
  #  pull_request:
  #    types: [closed]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    #    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'dev'

    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build project without running tests
        run: ./gradlew clean build -x test

      - name: Change name build file
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: Copy jar file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.jar
          target: /home/ubuntu/gongspot

      - name: SSH into EC2 and restart Spring Boot App
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            echo '${{ secrets.ENV }}' > /home/ubuntu/gongspot/.env
            export $(cat /home/ubuntu/gongspot/.env | xargs)
            cd /home/ubuntu/gongspot
            pkill -f 'java -jar' || true
            nohup java -jar project.jar > ./output.log 2>&1 & 
