name: Deploy Gongspot Server

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'

    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build project without running tests
        run: ./gradlew clean build -x test

      - name: Archive JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: gongspot-jar
          path: build/libs/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'

    steps:
      - name: Download built jar
        uses: actions/download-artifact@v4
        with:
          name: gongspot-jar
          path: build/libs/

      - name: Copy jar file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: build/libs/*.jar
          target: /home/ubuntu/gongspot/

      - name: Copy nginx.conf to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: nginx/nginx.conf               
          target: /home/ubuntu/gongspot/
      
      - name: Move nginx.conf to /etc/nginx and reload
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo mv /home/ubuntu/gongspot/nginx/nginx.conf /etc/nginx/nginx.conf
            sudo nginx -t
            sudo systemctl reload nginx

      - name: Create .env file on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo '${{ secrets.ENV }}' > /home/ubuntu/gongspot/.env

      - name: Install & Start Redis on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            if ! command -v redis-server &> /dev/null
            then
              echo 'Redis가 설치되어 있지 않습니다. 설치를 진행합니다.'
              sudo apt update
              sudo apt install -y redis
            else
              echo 'Redis가 이미 설치되어 있습니다.'
            fi

            sudo systemctl restart redis
            sudo systemctl enable redis

      - name: SSH into EC2 and restart Spring Boot App
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            export $(cat /home/ubuntu/gongspot/.env | xargs)
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar /home/ubuntu/gongspot/build/libs/*SNAPSHOT.jar > /home/ubuntu/gongspot/app.log 2>&1 &
